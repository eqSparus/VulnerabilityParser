package ru.parser.convectors;


import org.junit.jupiter.api.Test;

import java.io.IOException;
import java.util.Collections;
import java.util.List;
import java.util.Set;

import static org.junit.jupiter.api.Assertions.assertEquals;

class ConvertHtmlFstecTest {

    @Test
    void createTableRowTest() throws IOException {

        var convert = new ConvertHtmlFstec();
        var titleVul = "2021-02783";
        var highList = List.of("242", "35", "77");

        var tableRow = convert.createItemRow(titleVul);

        assertEquals("2021-02783", tableRow.getTitle());
        assertEquals("2021-27068", tableRow.getCve());
        assertEquals("94", tableRow.getCwe());
        assertEquals(highList, tableRow.getCapecHigh());
        assertEquals(Collections.emptyList(), tableRow.getCapecLow());
        assertEquals(Collections.emptyList(), tableRow.getCapecMedium());
        assertEquals(Collections.emptyList(), tableRow.getNoChance());

    }

    @Test
    void getAllCapecTest() throws IOException {

        var convert = new ConvertHtmlFstec();
        var url = "https://cwe.mitre.org/data/definitions/284.html";

        var map = convert.getAllCapec(url);
        var mediumList = List.of("441", "552", "578");
        var highList = List.of("19");
        var lowList = List.of("478", "479", "536", "546", "558");
        var noChanceList = List.of("502", "503", "550", "551", "556", "562", "563", "564");
        var keyTest = Set.of("High", "Low", "Medium", "No chance");

        var resultKey = map.keySet();

        assertEquals(keyTest, resultKey);
        assertEquals(highList, map.get("High"));
        assertEquals(mediumList, map.get("Medium"));
        assertEquals(lowList, map.get("Low"));
        assertEquals(noChanceList, map.get("No chance"));

    }

}
