package ru.parser.utilits;

import org.junit.jupiter.api.Test;

import java.io.IOException;
import java.net.SocketTimeoutException;
import java.net.UnknownHostException;
import java.util.Collections;
import java.util.List;

import static org.junit.jupiter.api.Assertions.*;

class UtilParseRowTest {

    @Test
    void parseCveTest() {
        var nameVul = "BDU:2021-05439";
        var result = UtilParseRow.parseCve(nameVul,"2021-05439");
        assertEquals("2021-05439", result);
    }

    @Test
    void isNullDefaultSetTest() {

        var list = List.of("454", "343", "334");

        var listNull = UtilParseRow.isNullDefaultSet(null);
        var listNotNull = UtilParseRow.isNullDefaultSet(list);

        assertEquals(Collections.emptyList(), listNull);
        assertEquals(list, listNotNull);
    }

    @Test
    void connectUrlTest() throws IOException {

        var url = "https://cwe.mitre.org/data/definitions/284.html";
        var text = "CWE-284: Improper Access Control";

        var document = UtilParseRow.connectUrl(url);

        var el = document.select("tr > td > div > h2");

        assertEquals(text, el.text());
    }

    @Test
    void connectUrlFailTest() {

        var url = "https://cwe.mit.org/da/deftions/284.html";

        try {
            var document = UtilParseRow.connectUrl(url);
            fail();
        } catch (IOException e) {
            assertEquals(UnknownHostException.class,e.getClass());
        }

    }

}
