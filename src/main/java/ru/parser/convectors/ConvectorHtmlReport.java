package ru.parser.convectors;

import lombok.AccessLevel;
import lombok.experimental.FieldDefaults;
import org.jsoup.Jsoup;

import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.nio.file.Path;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.regex.Pattern;
import java.util.stream.Stream;

@FieldDefaults(level = AccessLevel.PRIVATE, makeFinal = true)
public final class ConvectorHtmlReport {

    static final Pattern REG_SPLIT = Pattern.compile("\\w+:\\w+-\\w+\s\\w+:\\w+-\\w+");
    static final Pattern REG_REPLACE_STR = Pattern.compile("BDU:");

    private ConvectorHtmlReport(){
        
    }
    
    public static List<String> getAllTitleVulnerability(final Path path) {

        try {

            var pageReport = Jsoup.parse(path.toFile(), StandardCharsets.UTF_8.toString());

            var elementsTitle = pageReport.select("table > tbody > tr > td[class=bdu]");

            return elementsTitle.stream()
                    .flatMap(element -> {
                        var title = element.text();
                        if (title.matches(REG_SPLIT.pattern())) {
                            var strArr = title.split(" ");
                            return Arrays.stream(strArr);
                        }
                        return Stream.of(title);
                    })
                    .map(String::new)
                    .map(str -> str.replaceAll(REG_REPLACE_STR.pattern(), ""))
                    .toList();
            
        } catch (IOException e) {
            e.printStackTrace();
        }
        return Collections.emptyList();
    }

}
