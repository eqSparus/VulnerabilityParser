package ru.parser.convectors;

import lombok.AccessLevel;
import lombok.experimental.FieldDefaults;
import ru.parser.models.Item;
import ru.parser.utilits.UtilParseRow;

import java.io.IOException;

@FieldDefaults(level = AccessLevel.PRIVATE)
public class ConvectorItem implements Convector<Item> {


    @Override
    public Item convert(String path) throws IOException {
        var convectorCapec = new ConvectorCapec();
        var url = String.format("https://bdu.fstec.ru/vul/%s", path);

        var pageVul = UtilParseRow.connectUrl(url);

        var cveElement = pageVul.select("table > tbody > tr > td > div > ul > li > a");
        var cweElement = pageVul.select("table > tbody > tr > td > ul > li > a");

        var cveTitle = cveElement.text();
        var map = UtilParseRow.parseCwe(cweElement);
        var capecMap = convectorCapec.convert(map.get("url"));

        return Item.builder()
                .title(path)
                .cve(UtilParseRow.parseCve(cveTitle))
                .cwe(map.get("cwe"))
                .capecLow(UtilParseRow.isNullDefaultSet(capecMap.get("Low")))
                .capecMedium(UtilParseRow.isNullDefaultSet(capecMap.get("Medium")))
                .capecHigh(UtilParseRow.isNullDefaultSet(capecMap.get("High")))
                .noChance(UtilParseRow.isNullDefaultSet(capecMap.get("No chance")))
                .build();
    }
}
