package ru.parser.utilits;

import lombok.AccessLevel;
import lombok.experimental.FieldDefaults;
import org.jsoup.select.Elements;

import java.util.*;
import java.util.regex.Pattern;

@FieldDefaults(level = AccessLevel.PRIVATE, makeFinal = true)
public final class ParseInTableRow {

    static final Pattern CVE_TITLE_REG = Pattern.compile("\\d{4}-\\d{4,}");


    private ParseInTableRow() {

    }


    public static String parseCve(String text) {

        var matcher = CVE_TITLE_REG.matcher(text);

        if (matcher.find()) {
            return matcher.group();
        } else {
            throw new IllegalArgumentException();
        }
    }

    public static Map<String, String> parseCwe(Elements elements) {

        Map<String, String> result = new HashMap<>();

        var element = elements.stream()
                .filter(el -> el.text().contains("CWE"))
                .findAny().orElseThrow(IllegalArgumentException::new);

        result.put("url", element.attr("href"));
        result.put("cwe", element.text().replace("CWE-", ""));

        return result;
    }

    public static List<String> isNullDefaultSet(List<String> set) {
        return Objects.isNull(set) ? Collections.emptyList() : set;
    }

}
